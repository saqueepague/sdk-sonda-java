/*
 * Saque e Pague Sonda
 * Modelo de API para o serviço de sonda da Saque e Pague. Parceiro pode requisitar o último estado de uma transação (cancelada, confirmada ou pendente) através das chamadas desta API. Caso não encontre a transação, o serviço retorna o estado pendente.
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Objeto de requisição que contem informações da transação sondada e procura o último estado da mesma por um período retroativo de 7 dias.
 */
@Schema(description = "Objeto de requisição que contem informações da transação sondada e procura o último estado da mesma por um período retroativo de 7 dias.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-01-11T16:00:06.901Z[GMT]")public class SondaReqInfTransacao {

  @SerializedName("dataLocal")
  private String dataLocal = null;

  @SerializedName("horaLocal")
  private String horaLocal = null;

  @SerializedName("nsuSonda")
  private Long nsuSonda = null;

  @SerializedName("nsuTransacao")
  private Long nsuTransacao = null;
  public SondaReqInfTransacao dataLocal(String dataLocal) {
    this.dataLocal = dataLocal;
    return this;
  }

  

  /**
  * Data máxima da transação desejada (yyyy-mm-dd) para procurar o NSU em até 7 dias antes desta data/horário. Obs. Campo será tirado de versões futuras, mas ainda necessário e mantido por retro-compatibilidade.
  * @return dataLocal
  **/
  @Schema(example = "2018-12-11", required = true, description = "Data máxima da transação desejada (yyyy-mm-dd) para procurar o NSU em até 7 dias antes desta data/horário. Obs. Campo será tirado de versões futuras, mas ainda necessário e mantido por retro-compatibilidade.")
  public String getDataLocal() {
    return dataLocal;
  }
  public void setDataLocal(String dataLocal) {
    this.dataLocal = dataLocal;
  }
  public SondaReqInfTransacao horaLocal(String horaLocal) {
    this.horaLocal = horaLocal;
    return this;
  }

  

  /**
  * Hora máxima da transação desejada (hh-mm-ss) para procurar o NSU em até 7 dias antes desta data/horário. Obs. Campo será tirado de versões futuras, mas ainda necessário e mantido por retro-compatibilidade.
  * @return horaLocal
  **/
  @Schema(example = "19:00:00", required = true, description = "Hora máxima da transação desejada (hh-mm-ss) para procurar o NSU em até 7 dias antes desta data/horário. Obs. Campo será tirado de versões futuras, mas ainda necessário e mantido por retro-compatibilidade.")
  public String getHoraLocal() {
    return horaLocal;
  }
  public void setHoraLocal(String horaLocal) {
    this.horaLocal = horaLocal;
  }
  public SondaReqInfTransacao nsuSonda(Long nsuSonda) {
    this.nsuSonda = nsuSonda;
    return this;
  }

  

  /**
  * NSU da transação de sonda. Necessário para controle interno e rastreabilidade das requisições.
  * minimum: 1
  * @return nsuSonda
  **/
  @Schema(example = "1", required = true, description = "NSU da transação de sonda. Necessário para controle interno e rastreabilidade das requisições.")
  public Long getNsuSonda() {
    return nsuSonda;
  }
  public void setNsuSonda(Long nsuSonda) {
    this.nsuSonda = nsuSonda;
  }
  public SondaReqInfTransacao nsuTransacao(Long nsuTransacao) {
    this.nsuTransacao = nsuTransacao;
    return this;
  }

  

  /**
  * NSU da transação desejada. Gerado pelo sistema da SEP. Para casos de teste usar até 10 para retorno cancelado, até 20 para estado confirmado e o resto pendente.
  * minimum: 1
  * @return nsuTransacao
  **/
  @Schema(example = "1", required = true, description = "NSU da transação desejada. Gerado pelo sistema da SEP. Para casos de teste usar até 10 para retorno cancelado, até 20 para estado confirmado e o resto pendente.")
  public Long getNsuTransacao() {
    return nsuTransacao;
  }
  public void setNsuTransacao(Long nsuTransacao) {
    this.nsuTransacao = nsuTransacao;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SondaReqInfTransacao sondaReqInfTransacao = (SondaReqInfTransacao) o;
    return Objects.equals(this.dataLocal, sondaReqInfTransacao.dataLocal) &&
        Objects.equals(this.horaLocal, sondaReqInfTransacao.horaLocal) &&
        Objects.equals(this.nsuSonda, sondaReqInfTransacao.nsuSonda) &&
        Objects.equals(this.nsuTransacao, sondaReqInfTransacao.nsuTransacao);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(dataLocal, horaLocal, nsuSonda, nsuTransacao);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SondaReqInfTransacao {\n");
    
    sb.append("    dataLocal: ").append(toIndentedString(dataLocal)).append("\n");
    sb.append("    horaLocal: ").append(toIndentedString(horaLocal)).append("\n");
    sb.append("    nsuSonda: ").append(toIndentedString(nsuSonda)).append("\n");
    sb.append("    nsuTransacao: ").append(toIndentedString(nsuTransacao)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
