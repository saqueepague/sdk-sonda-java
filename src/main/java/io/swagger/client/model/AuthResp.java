/*
 * Saque e Pague Sonda
 * Modelo de API para o serviço de sonda da Saque e Pague. Parceiro pode requisitar o último estado de uma transação (cancelada, confirmada ou pendente) através das chamadas desta API. Caso não encontre a transação, o serviço retorna o estado pendente.
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * Objeto de resposta de autenticação.
 */
@Schema(description = "Objeto de resposta de autenticação.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-01-11T15:47:10.474Z[GMT]")public class AuthResp {

  @SerializedName("access_token")
  private String accessToken = null;

  @SerializedName("expires_in")
  private Long expiresIn = null;

  @SerializedName("token_type")
  private String tokenType = null;
  public AuthResp accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

  

  /**
  * Token de acesso para requisição de sonda.
  * @return accessToken
  **/
  @Schema(required = true, description = "Token de acesso para requisição de sonda.")
  public String getAccessToken() {
    return accessToken;
  }
  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }
  public AuthResp expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  

  /**
  * Tempo de expiração do token em segundos.
  * @return expiresIn
  **/
  @Schema(example = "36000", required = true, description = "Tempo de expiração do token em segundos.")
  public Long getExpiresIn() {
    return expiresIn;
  }
  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }
  public AuthResp tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

  

  /**
  * Tipo de token gerado para ser usado na requisição sonda. Deve ser sempre \&quot;bearer\&quot;
  * @return tokenType
  **/
  @Schema(example = "bearer", required = true, description = "Tipo de token gerado para ser usado na requisição sonda. Deve ser sempre \"bearer\"")
  public String getTokenType() {
    return tokenType;
  }
  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthResp authResp = (AuthResp) o;
    return Objects.equals(this.accessToken, authResp.accessToken) &&
        Objects.equals(this.expiresIn, authResp.expiresIn) &&
        Objects.equals(this.tokenType, authResp.tokenType);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(accessToken, expiresIn, tokenType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthResp {\n");
    
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
